/**FILEDESC
공통:공통사용 script 파일
*/
String.prototype.trim = function() { return this.replace(/^\s+|\s+$/g, ''); };
String.prototype.ltrim = function() { return this.replace(/^[ ]*/g, ''); };
String.prototype.rtrim = function() { return this.replace(/[ ]*$/g, ''); };

var popupWin = null;

function OpenWindow(pUrl, pTitle, pWidth, pHeight, scrollBar) {
	try{
	    if (popupWin != null)    //현재 팝업창이 존재할경우 닫는다.
	    {
	    	popupWin.close();
	    	popupWin = null;
	    }else{
	    }
	}
	catch(ex){
	}
	var winHeight = document.body.clientHeight;	// 현재창의 높이
	var winWidth = document.body.clientWidth;	// 현재창의 너비
	var winX = window.screenLeft;	// 현재창의 x좌표
	var winY = window.screenTop;	// 현재창의 y좌표
    var left = winX + (winWidth - pWidth)/2;
    var top = winY + (winHeight - pHeight)/2;

    var sFeatures = 'left=' + left + ', top=' + top + ', width=' + pWidth + ', height=' + pHeight + ',status=yes,toolbar=no,menubar=no,location=no,resizable=0';
    if (scrollBar != null) {
        sFeatures += ",scrollbars=" + scrollBar;
    }

    popupWin = window.open(pUrl, pTitle, sFeatures);
    popupWin.focus();
}
function OpenWindowPost(pForm, pUrl, pTitle, pWidth, pHeight, scrollBar) {
	try{
		if (popupWin != null)    //현재 팝업창이 존재할경우 닫는다.
		{
			popupWin.close();
			popupWin = null;
		}else{
		}
	}
	catch(ex){
	}

	var winHeight = document.body.clientHeight;	// 현재창의 높이
	var winWidth = document.body.clientWidth;	// 현재창의 너비
	var winX = window.screenLeft;	// 현재창의 x좌표
	var winY = window.screenTop;	// 현재창의 y좌표
    var left = winX + (winWidth - pWidth)/2;
    var top = winY + (winHeight - pHeight)/2;

    var sFeatures = 'left=' + left + ', top=' + top + ', width=' + pWidth + ', height=' + pHeight + ',status=yes,toolbar=no,menubar=no,location=no,resizable=0';
    if (scrollBar != null) {
        sFeatures += ",scrollbars=" + scrollBar;
    }

    popupWin = window.open('', pTitle, sFeatures);
    popupWin.focus();

    pForm.target = pTitle;
    pForm.action = pUrl;
    pForm.method = 'post';
    pForm.submit();
}
window.onunload = function(){
    if (popupWin != null) popupWin.close();
};

function popclose() {
    setTimeout('self.close()', '500', 'JavaScript');
}
//null 처리 함수
function nullCheck(obj, default_val) {
	if (obj=="0") {
		return obj;
	}
	if (typeof obj === 'undefined'
		|| obj == null
		|| !obj
		|| obj == ''
		|| String(obj).trim() == '') {

		return default_val;
	}
	return obj;
}
//전일 구하기
function setGigan(staraDayID,endDayID,diffDay,className,classObj) {
	var today = new Date();
	$("#"+staraDayID).val(dayAdd(today,diffDay));
	$("#"+endDayID).val(formatDay(today,1));
	if (className!=""){
		$("." + className).each(function(index) {
			$(this).attr('class',className);
		});
	}

	$(classObj).attr('class',className + ' on');
}
//오늘 날짜 구하기
function getToday() {
	var date = new Date();
	var year = date.getFullYear();
	var month = new String(date.getMonth()+1);
	var day = new String(date.getDate());

	// 한자리수일 경우 0을 채워준다.
	if(month.length == 1){
	  month = "0" + month;
	}
	if(day.length == 1){
	  day = "0" + day;
	}
	return year + "-" + month + "-" + day;
}
//오늘 날짜 구하기 : mm/dd/yyyy
function getTodayIE() {
	var date = new Date();
	var year = date.getFullYear();
	var month = new String(date.getMonth()+1);
	var day = new String(date.getDate());

	// 한자리수일 경우 0을 채워준다.
	if(month.length == 1){
	  month = "0" + month;
	}
	if(day.length == 1){
	  day = "0" + day;
	}
	return month + "/" + day+ "/" + year   ;
}
//날짜 더하기 , day : yyyy-mm-dd
function dayAdd(day, num) {
    var mydate = new Date(day);
    mydate.setDate(mydate.getDate() + num);
    return formatDay(mydate,1);
}
//날짜 더하기 , day : mm/dd/yyyy
function dayAddIE(day, num) {
    var mydate = new Date(day);
    mydate.setDate(mydate.getDate() + num);
    return formatDay(mydate,1);
}
//그 달의 마지막 날 - LastDayOfMonth(2014,2);
function LastDayOfMonth(year, month) {
	var firstDayOfMonth = [ year, month, 1].join('-');  // ex) 2014-04-01
	var firstDayOfMonthDate = new Date(firstDayOfMonth);
	firstDayOfMonthDate.setMonth(firstDayOfMonthDate.getMonth() + 1);   // ex) 2014-05-01
	firstDayOfMonthDate.setDate(firstDayOfMonthDate.getDate() - 1);   // ex) 2014-04-30
	return firstDayOfMonthDate.getDate();
}
//날짜 포맷
function formatDay(date, sw) {
	var mydate = new Date(date);
    var mymonth = mydate.getMonth() + 1;
    var myweekday = mydate.getDate();
	var ret="";
	if (sw==1) { //yyyy-mm-dd
		ret = (mydate.getFullYear() + "-" + ((mymonth < 10) ? "0" : "") + mymonth + "-" + ((myweekday < 10) ? "0" : "") + myweekday);
	} else if (sw==2) { //yyyy년 m월 d일
		ret= "<span class=\"schedule-nav-txt-year\">"+mydate.getFullYear()+"</span>년";
		ret+= "<span class=\"schedule-nav-txt-month\">"+mymonth+"</span>월";
		ret+= "<span class=\"schedule-nav-txt-day\">"+myweekday+"</span>일";
	}  else if (sw==3) { //   m/d
		ret = mymonth + "/" + myweekday;
	}  else if (sw==4) { //   년 월
		ret= "<span class=\"schedule-nav-txt-year\">"+mydate.getFullYear()+"</span>년";
		ret+= "<span class=\"schedule-nav-txt-month\">"+mymonth+"</span>월";
	}  else if (sw==5) { //   m월
		ret = mymonth + "월";
	} else if (sw==6) { //yyyy년 m월 d일
		ret= "<span class=\"schedule-nav-txt-year\">"+mydate.getFullYear()+"년 </span>";
		ret+= "<span class=\"schedule-nav-txt-month\">"+mymonth+"월 </span>";
		ret+= "<span class=\"schedule-nav-txt-day\">"+myweekday+"일 </span>";
	} else if (sw==7) { // mm/dd/yyyy
		ret = (((mymonth < 10) ? "0" : "") + mymonth + "/" + ((myweekday < 10) ? "0" : "") + myweekday + "/" + mydate.getFullYear());
	}
    return ret;
}
//날짜 포맷
function formatMD(year, month) {
	var ret="";
	var monthch =  month;
	switch (monthch) {
		case "January":
			monthch = "1";
			break;
		case "February":
			monthch = "2";
			break;
		case "March":
			monthch = "3";
			break;
		case "April":
			monthch = "4";
			break;
		case "May":
			monthch = "5";
			break;
		case "June":
			monthch = "6";
			break;
		case "July":
			monthch = "7";
			break;
		case "August":
			monthch = "8";
			break;
		case "September":
			monthch = "9";
			break;
		case "October":
			monthch = "10";
			break;
		case "November":
			monthch = "11";
			break;
		case "December":
			monthch = "12";
			break;
	}
	$(".schedule-nav-txt-year").html(year+"년");
	$(".schedule-nav-txt-month").html(monthch+"월");
    return true;
}

//날짜 포맷
function formatMD2(year, month) {
	var ret="";
	var monthch =  month;
	switch (monthch) {
		case "January":
			monthch = "01";
			break;
		case "February":
			monthch = "02";
			break;
		case "March":
			monthch = "03";
			break;
		case "April":
			monthch = "04";
			break;
		case "May":
			monthch = "05";
			break;
		case "June":
			monthch = "06";
			break;
		case "July":
			monthch = "07";
			break;
		case "August":
			monthch = "08";
			break;
		case "September":
			monthch = "09";
			break;
		case "October":
			monthch = "10";
			break;
		case "November":
			monthch = "11";
			break;
		case "December":
			monthch = "12";
			break;
	}
	$("#selectMonth").val(year+"-"+monthch);
    return true;
}
//24시간 형식을 12시간 형식으로 변환한다. - console.log(convert12H('12:30'));
function convert12H(time, options) {
	var ampmLabel = (options && options.ampmLabel) || [ '오전', '오후' ];
	var timeRegExFormat = /^([0-9]{2}):([0-9]{2})$/;
	var timeToken = time.match(timeRegExFormat);
	if (typeof timeRegExFormat === 'undefine') { // 잘못된 형식
		return null;
	}
	var intHours = parseInt(timeToken[1]);
	var intMinutes = parseInt(timeToken[2]);
	var strHours12H = ('0' + (intHours == 12 ? 12 : intHours % 12)).slice(-2);

	return ampmLabel[parseInt(intHours / 12)] + ' ' + strHours12H + ':' + intMinutes;
}

//날짜 차이 일수 계산
function dateDiff(date1,date2) {
	var sdt = new Date(date1);
	var edt = new Date(date2);
	var diff = Math.ceil((edt.getTime()-sdt.getTime())/(1000*3600*24));

    return diff;
}
//시작일 종료일 비교 체크
function giganChk(startday,endday,msg) {
	if (startday>endday){
		if (msg!="") {
			alert(msg);
		}
		return false;
	} else {
		return true;
	}
}
//주일 한글값 구하기(요일)
function getInputDayLabel(day) {
	var week = new Array('일', '월', '화', '수', '목', '금', '토');
	var today = new Date(day).getDay();
	var todayLabel = week[today];
	return todayLabel;
}

//시간 차이
function timeGap(datetime1, datetime2,sw) { //datetime : yyyy-mm-dd hh:mm,  datetime1: old, datetime2 : now
	var datetmp = datetime1.split(" ");
	var datetmpA = datetmp[0].split("-");
	var datetmpB = datetmp[1].split(":");
	var datetmp2 = datetime2.split(" ");
	var datetmp2A = datetmp2[0].split("-");
	var datetmp2B = datetmp2[1].split(":");
	var old = new Date (parseInt(datetmpA[0]), parseInt(datetmpA[1]), parseInt(datetmpA[2]), parseInt(datetmpB[0]), parseInt(datetmpB[1]), 00);
	var now = new Date (parseInt(datetmp2A[0]), parseInt(datetmp2A[1]), parseInt(datetmp2A[2]), parseInt(datetmp2B[0]), parseInt(datetmp2B[1]), 00);
	var gap = now.getTime() - old.getTime();
	var ret=0;
	if (sw==1) { // 시간단위 반환
		var ret = gap / 1000 / 60 / 60;
	} else if (sw==2) { // 분단위 반환
		var ret = gap / 1000 / 60;
	} else if (sw==3) { // 초단위 반환
		var ret = gap / 1000;
	}
	return ret;
}

//숫자 콤마넣기
function comma(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

//콤마풀기
function uncomma(str) {
    str = String(str);
    return str.replace(/[^\d]+/g, '');
}
//htmlspecialchars 기능구현
function escapeHtml(str) {
	var map = {
		'&': '&amp;',
		'<': '&lt;',
		'>': '&gt;',
		'"': '&quot;',
		"'": '&#039;'
	};
	return str.replace(/[&<>"']/g, function(m) { return map[m]; });
}
//전체 문자치환
function replaceAll(str, searchStr, replaceStr) {
  return str.split(searchStr).join(replaceStr);
}
//htmlspecialchars 반대 기능구현
function htmlDecode(input){
  var e = document.createElement('textarea');
  e.innerHTML = input;
  return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
}
//개행문자를 <br>로 치환
function crTobr(text) {
	var result = text.replace(/(\n|\r\n)/g, '<br>');
	return result;
}
//<br>를 개행문자로 치환
function brTocr(text) {
	result = text.replace(/(<br>|<br\/>|<br \/>|<br style="clear:both;">)/g, '\r\n');
	return result;
}
//SmartEditor에 내용 표시하기
function smePutText(str) {
	return crTobr(htmlDecode(str.trim()));
}
//SmartEditor가 아닌 다른 영역에 표시하기
function smePutTextDisp(str) {
	return crTobr(replaceAll(htmlDecode(str.trim()),"upload/","/smarteditor2/upload/"));
}
//태그 지우기
function stipTag(str) {
	return str.replace(/(<([^>]+)>)/ig,"");
}
//p태그 지우기
function smePutText2(str) {
	var s = htmlDecode(str.trim());
	result = s.replace(/(<p)/g, '<span');
	result = result.replace(/(<\/p>)/g, '</span><br>');
	return crTobr(result);
}
//SmartEditor에 내용 가져오기
function smeGetText(str) {
	var s = nullCheck(str,"");
	return escapeHtml(brTocr(s.trim()));
}
//전체 Input 요소 검증
function allValidate(){
	$('input,select,textarea').each(
		function(index){
			eleValidate($(this));
			//console.log(index + '=Type: ' + input.attr('type') + 'Name: ' + input.attr('name') + 'Value: ' + input.val());
		}
	);
}
//폼 요소 초기화
function initValidate(frmID){
	$('#' + frmID + ' input,select,textarea').each(
		function(index){
			eleValidate($(this));
			//console.log(index + '=Type: ' + input.attr('type') + 'Name: ' + input.attr('name') + 'Value: ' + input.val());
		}
	);
}
function eleValidate(input){
	var dataValue = input.attr('data');
	if (nullCheck(dataValue,'') != ''){
		if (dataValue.indexOf("옵")<0){
			input.attr('required',true);
		}
		if (input.attr('data').indexOf('영숫자')>=0){
			input.keyup(function() {
				input.val(input.val().replace(/[^A-Za-z0-9]/g,''));
			});
		} else if (input.attr('data').indexOf('숫자')>=0){
			input.keyup(function() {
				input.val(input.val().replace(/[^0-9]/g,''));
			});
		} else if (input.attr('data').indexOf('http')>=0){
			input.blur(function() {
				if(input.val().indexOf("http")<0){
					alert("http:// 또는 https:// 로 시작해야 합니다.");
					input.val('');
				}
			});
		} else if (input.attr('data').indexOf('이메일')>=0){
			input.blur(function() {
				var exptext = /^[A-Za-z0-9_\.\-]+@[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+/;
				if(exptext.test(input.val())==false){
					alert("이메일 형식이 올바르지 않습니다.");
					input.val('');
				}
			});
		} else if (input.attr('data').indexOf('금액')>=0){
			input.css("text-align","right");
			input.keyup(function() {
				input.val(comma(uncomma(input.val())));
			});

		} else if (input.attr('data').indexOf('영어')>=0){
			input.keyup(function() {
				input.val(input.val().replace(/[^A-Za-z]/g,''));
			});
		}
	}
}
function formMakeSet(inputArr){ //inputArr 배열, 폼체크 및 form.serialize
	var ret="";
	for (var i=0;i<inputArr.length;i++) {
		var dataValue = nullCheck(inputArr[i].attr('data'),'');
		if (dataValue != ''){
			if (dataValue.indexOf("옵")<0){
				if (inputArr[i].val().trim()==""){
					alert('필수 입력입니다.');
					inputArr[i].focus();
					return "";
				}
			}
			if (dataValue.indexOf('숫자')>=0 || dataValue.indexOf('금액')>=0){
				if (isNaN(inputArr[i].val())) {
					alert('숫자만 입력해 주세요.');
					inputArr[i].focus();
					return "";
				}

			} else if (dataValue.indexOf('영숫자')>=0){
				if (!isAlphaNumber(inputArr[i].val())) {
					alert('영숫자만 입력해 주세요.');
					inputArr[i].focus();
					return "";
				}
			} else if (dataValue.indexOf('이메일')>=0){
				var exptext = /^[A-Za-z0-9_\.\-]+@[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+/;
				if(exptext.test(inputArr[i].val())==false){
					alert("이메일 형식이 올바르지 않습니다.");
					inputArr[i].val('');
					return "";
				}
			} else if (dataValue.indexOf('영어')>=0){
				var exptext = /[^A-Za-z]/g;
				if(exptext.test(inputArr[i].val())==false){
					alert("영어만 입력해 주세요.");
					inputArr[i].val('');
					return "";
				}
			}
		}
		ret += "&" + inputArr[i].attr("name") + "=" + inputArr[i].val();
	}
	return ret;
}
//숫자 폰번호를 - 폰번호로
function fPhoneNumber(num){
	var ret="";
	if (num.length==10){
		ret = num.substr(0,3) + "-" + num.substr(4,3) + "-" + num.substr(6,4);
	} else if (num.length==11){
		ret = num.substr(0,3) + "-" + num.substr(4,4) + "-" + num.substr(7,4);
	} else {
		ret = num;
	}
	return ret;
}
//페이지 이동
function backGo(){
	history.back();
}

//입력값 유효성 체크함수들
function matchSpace(str) {
	var pattern = /\s/g;
	return (pattern.test(str)) ? true : false;
}
//QueryString 변조 방지를 위한 암호화 처리
function ajaxJsencodeGet(param) {
	$.ajaxSettings.async = false;
	var retValue="";
	$.post( "/API/encodeGet.json.php", { param:param }, function(result) {
		retValue=result['result'];
	}, "json").fail(function(response) {
		console.log('Error: ' + response.responseText);
	}).always(function() {
	});
	$.ajaxSettings.async = true;
	return retValue;
}
//엑셀다운로드 화면표시만 저장하기
function excelDownload(fn){
	$("#fn").val(fn);
	$("#excelAreaTemp").html($("#excelArea").html());
	console.log($("#excelAreaTemp").html());
	$("#excelAreaTemp .noExcel").remove();
	$("#excelAreaTemp .radioExcel").each(function(index) {
		if ($(this).children("input[type=radio]").is(":checked")) {
			$(this).html($("label[for='"+$(this).children("input[type=radio]").attr("id")+"']").html());
		} else {
			$(this).html("");
		}
	});
	$("#excelAreaTemp > table > tbody > tr > td > input[type=text]").each(function(index) {
		$(this).parents("td").html($(this).val());
	});
	$("#excelAreaTemp > table > thead > tr > th > input[type=checkbox]").closest("th").remove();
	$("#excelAreaTemp > table > tbody > tr > td > input[type=checkbox]").closest("td").remove();
	$("#excelAreaTemp > table").attr("border","1");
	$("#excelAreaTemp > table > thead > tr").attr("bgcolor","#cccccc");
	$("#excelAreaTemp > table > thead > tr").attr("align","center");
	$("#excelAreaTemp > table > tbody > tr").attr("bgcolor","#ffffff");
	$("#excelAreaTemp > table > tbody > tr").attr("align","center");
	$("#excelAreaTemp > table > tbody > tr").attr("height","22");
	$("#excelAreaTemp > table > tbody > tr > td > a").contents().unwrap().wrap("<span></span>");
	$("#excel").val($("#excelAreaTemp").html());
	$("#exfrm").attr("target","frmHidden");
	$("#exfrm").attr("action","/API/make_excel.php");
	$("#exfrm").submit();
}
//전화번호 유효성 체크
function isPhone(str) {
	if (matchSpace(str)) {
		return false;
	}
	var pattern = /^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/;
	return (pattern.test(str)) ? true : false;
}
//숫자만 허용
function isNumber(str) {
	var pattern=/^(-?)([0-9]+)$/;
	return (pattern.test(str)) ? true : false;
}
//영숫자만 허용
function isAlphaNumber(str) {
	var pattern=/^[A-Za-z0-9+]*$/;
	return (pattern.test(str)) ? true : false;
}
//이메일 유효성 체크
function fnCheckEmail(id) {
	if (matchSpace($("#"+id).val())) {
		return false;
	}
	var exptext = /^[A-Za-z0-9_\.\-]+@[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+/;
	if(exptext.test($("#"+id).val())==false){
		alert("이메일 형식이 올바르지 않습니다.");
		$("#"+id).focus();
		return false;
	}
	return true;
}
//목록페이징
function PageSet(totalCnt,dataSize,pageSize,pageNo){
	totalCnt=parseInt(totalCnt);//전체레코드수
	dataSize=parseInt(dataSize);//페이지당보여줄데이타수
	pageSize=parseInt(pageSize);//페이지그룹범위1235678910
	pageNo=parseInt(pageNo);//현재페이지

	var html=new Array();
	if(totalCnt==0){
		return"";
	}
	//페이지카운트
	var pageCnt=totalCnt % dataSize;
	if(pageCnt==0){
		pageCnt=parseInt(totalCnt/dataSize);
	}else{
		pageCnt=parseInt(totalCnt/dataSize)+1;
	}
	var pRCnt=parseInt(pageNo/pageSize);
	if(pageNo%pageSize==0){
		pRCnt=parseInt(pageNo/pageSize)-1;
	}
	//이전화살표
	if(pageNo>pageSize){
		var s2;
		if(pageNo%pageSize==0){
			s2=pageNo-pageSize;
		}else{
			s2=pageNo-pageNo%pageSize;
		}
		html.push('<a class="prev" href="javascript:go_paging(');
		html.push(1);
		html.push(')";>');
	}
	for(var index=pRCnt*pageSize+1;index<(pRCnt+1)*pageSize+1;index++){
		if(index==pageNo){
			html.push('<a class="on" href="javascript:go_paging(');
			html.push(index);
			html.push(')";>');
			html.push(index);
			html.push('</a>');
		}else{
			html.push('<a href="javascript:go_paging(');
			html.push(index);
			html.push(')";>');
			html.push(index);
			html.push('</a>');
		}if(index==pageCnt){
			break;
		}
	}
	//다음화살표
	if(pageCnt>(pRCnt+1)*pageSize){
		html.push('<a class="next" href="javascript:go_paging(');
		html.push((pRCnt + 1)*pageSize+1);
		html.push(')";>');
	}
	return html.join("");
}
//네이버 스마트에디터 표시 및 입력 내용 표시하기
function smeInit(){
	$.post("/smarteditor2/smartEditor.php", { idx:1 }, function(result) {
		$("#smartEditor").html(result);
	}, "html").fail(function(response) {
		console.log('Error: ' + response.responseText);
	}).always(function() {
		//nothing
	});
}
function smeIdInit(idx,id,cid){
	$.post("/smarteditor2/smartEditorId.php", { id:cid,idx:idx }, function(result) {
		$("#"+id).html(result);
	}, "html").fail(function(response) {
		console.log('Error: ' + response.responseText);
	}).always(function() {
		//nothing
	});
}
//네이버 스마트에디터 입력 내용 TextAre로 저장
function putSMETextArea() {
	oEditors.getById["content"].exec("UPDATE_CONTENTS_FIELD", []);
}
function putIdSMETextArea(idx,id) {
	eval('oEditors'+idx).getById[id].exec("UPDATE_CONTENTS_FIELD", []);
}
//네이버 maps_geocoding
function xyAddress(xID,yID,query) {
	$.ajaxSettings.async = false;
	var x="";
	var y="";
	var xyArr = [];
	$.post( "/API/maps_geocoding.json.php", { query:query }, function(result) {
			x=result['addresses'][0].x; //지도 x값
			y=result['addresses'][0].y; //지도 y값
	}, "json").fail(function(response) {
		console.log('Error: ' + response.responseText);
	}).always(function() {
	});
	if (xID != "" && yID != "")
	{
		$("#"+xID).val(x);
		$("#"+yID).val(y);
	}
	xyArr.push(x);
	xyArr.push(y);
	$.ajaxSettings.async = true;
	return xyArr;
}
//배열을 문자열 구분자로 만듬
function arrayToString(tmpArr,sp) {
	var tmpStr="";
	tmpArr.forEach(function(element, index, array){
		tmpStr += element + sp;
	});
	return tmpStr.substring(0,tmpStr.length-1);
}
//배열을 문자열 Sperator로 감싸고 , 연결함
function arrayToStringSp(tmpArr,sp) {
	var tmpStr="";
	tmpArr.forEach(function(element, index, array){
		tmpStr += sp + element + sp + ",";
	});
	return tmpStr.substring(0,tmpStr.length-1);
}
//JSON 문자열 구분자로 만듬
function arrayKeyToString(tmpArr,key,sp) {
	var tmpStr="";
	tmpArr.forEach(function(element, index, array){
		tmpStr += element[key] + sp;
	});
	return tmpStr.substring(0,tmpStr.length-1);
}

//확장자 구하기
function getExtensionOfFilename(filename) {
    var fileLen = filename.length;
    var lastDot = filename.lastIndexOf('.');
    var fileExt = filename.substring(lastDot, fileLen).toLowerCase();

    return fileExt;
}
//확장자 제거하기
function trimExtensionOfFilename(filename) {
    var myFN = filename.substring(0, filename.lastIndexOf('.'));

    return myFN;
}
//위치정보 얻기
function getLocation() {
  var ret= [];
  if (navigator.geolocation) { // GPS를 지원하면
      navigator.geolocation.getCurrentPosition(function(position) {
	  ret.push(position.coords.longitude); //x
	  ret.push(position.coords.latitude); //y
    }, function(error) {
      console.error(error);
    }, {
      enableHighAccuracy: false,
      maximumAge: 0,
      timeout: Infinity
    });
  }
  return ret;
}
//유효한 파일인지 체크
function checkExtension(fileExt,arrExt) {
    var result;

    // 미리보기 가능한 확장자는 배열에 넣기
    //var arrExt = new Array(".hwp", ".xls", ".xlsx", ".ppt", ".pptx", ".doc", ".docx", ".pdf", "txt", ".bmp", ".gif", ".tip", ".jpg", ".png", ".jpeg");

    // 배열 요소를 검사하여 체크
    for(var i=0; i<arrExt.length; i++) {
        if(arrExt[i] == fileExt) {
            result = true;
            break;
        } else
            result = false;
    }

    return result;
}
//클립보드 복사
function copyToClipboard(val) {
  var t = document.createElement("textarea");
  document.body.appendChild(t);
  t.value = val;
  t.select();
  document.execCommand('copy');
  document.body.removeChild(t);
}
//입력창에 Ctrl+C 막기
function preventKeyCtrlV(){
    if(event.ctrlKey && event.keyCode == 67 ){
        event.returnValue = false;
    }
}
//입력창에 Ctrl+V 막기
function preventKeyCtrlV(){
    if(event.ctrlKey && event.keyCode == 86 ){
        event.returnValue = false;
    }
}
//이미지의 너비*높이 구하기
function getImageSise(src) {

    var img = new Image();
	var xyArr = [];
    img.src = src;
    xyArr.push(img.width);
    xyArr.push(img.height);

    return xyArr;
}
//URL 파라미터 값 읽어오기
(function($) {
	$.QueryString = (function(a) {
		if (a == "") return {};
		var b = {};
		for (var i = 0; i < a.length; i++) {
			var p=a[i].split('=');
			if (p.length != 2) continue;
			b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " ")); //공백으로 변환 후 디코딩
		}
		return b;
	})(window.location.search.substr(1).split('&')) //파라미터 정보만 분리
})(jQuery);
//체크박스 전체 선택/취소
function allChecked(obj,name){
	$("input:checkbox[name='"+name+"']").prop("checked", obj.checked);
}
//체크박스 개별 선택으로 전체 선택/취소 상태 변경
function allCheckedToggle(name,id) {
	var totalCnt=0, trueCnt=0;
	$("input[name='"+name+"']").each(function(index) {
		totalCnt++;
		if ($(this).is(":checked")) {
			trueCnt++;
		}
	});
	if (totalCnt==trueCnt){
		$("#"+id).prop("checked", true);
	} else {
		$("#"+id).prop("checked", false);
	}
}
//카운트 다운 표시하기  var fiveMinutes = 60 * 5; startTimer(fiveMinutes, 'auth_numText','timeOutFlag');
function startTimer(duration, id, timeoutId) {
    var timer = duration, minutes, seconds;

	minutes = parseInt(timer / 60, 10);
	seconds = parseInt(timer % 60, 10);

	minutes = minutes < 10 ? "0" + minutes : minutes;
	seconds = seconds < 10 ? "0" + seconds : seconds;
	$('#'+id).text(minutes + ":" + seconds);
	timer--;

    var timerInterval = setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        $('#'+id).text(minutes + ":" + seconds);

        if (timer == 0){
			$("#"+timeoutId).val('Y');
			clearInterval(timerInterval);
        } else if (--timer < 0) {
            timer = duration;
		}

    }, 1000);
}
//평점 합계의 평점
function getEvalPointSum(evalNumArr) {
	var point=0;

	for (var i=0;i<evalNumArr.length;i++) {
		console.log(evalNumArr[i]);
		point+=parseFloat(evalNumArr[i]);
	}
	point = point / i;
	return point.toFixed(1);
}
//평점 계산
function getEvalPoint(totpoint,memcnt) {

	if(totpoint=="0" && memcnt=="0"){
		return 0;
	}

	var point = parseFloat(totpoint) / parseFloat(memcnt);

	return point.toFixed(1);
}
//평점을 백분율로 환산 - evalNum : 평점 ,perNum : 예)5점 만점
function setEvalToRate(evalNum,perNum) {

	if(evalNum=="0"){
		return 0;
	}

	var point = parseFloat(evalNum) / parseFloat(perNum) * 100;
	return parseInt(point);
}
//CPA 프로모션 링크 주소 만들기
function cpaMakeUrl(seq){
	return location.protocol + "//" + location.host + "/?p=" + seq;
}
/*
마감일 yyyy-mm-dd
현재날짜 비교
미마감이면 남은 일자 리턴
마감이면 D-DAY 텍스트
*/
function getDDay(mday){
	var diff = dateDiff(getToday(),mday);
	if (diff<=0){
		diff = "D-DAY";
	} else {
		diff = "D-"+diff;
	}
	return diff;
}
/*
다음 지도로 링크 걸기
*/
function daumMapLink(address){
	return "https://map.kakao.com/?q=" + encodeURI(address);
}
/*
모달 팝업 만들기
*/
function modalInit(){
	if ($("#jWorkDiv").length > 0){
		var sTmp="";
		sTmp+= "<div id=\"modal_task\" class=\"modal_cnt\">";
		sTmp+= "<div class=\"md_main\">";
		sTmp+= "<h4 id=\"modal_title\"></h4>";
		sTmp+= "<div class=\"input_box txt\">";
		sTmp+= "<p id=\"modal_content\"></p>";
		sTmp+= "</div>";
		sTmp+= "</div>";
		sTmp+= "<button class=\"close close_btn\" type=\"button\"  data-link=\"last\" >닫기</button>";
		sTmp+= "</div>";
		$("#jWorkDiv").html(sTmp);
		$("#jWorkDiv").show();
	} else {
		alert("id='jWorkDiv' div 태그가 없습니다.");
	}
}
/*
모달 팝업 만들기
*/
function modalOpenCust(obj){
	$("#modal_title").html($(obj).data("title"));
	$("#modal_content").html($(obj).data("content"));
}
/*
모달 팝업 보이기
retType : 0 = String값 리턴, 1이면 document.write
*/
function alertModal(title,msg,retType){
	var sTmp="";
	sTmp+= "<a href=\"#modal_task\" class=\"openBtnCust\" data-title='"+title+"' data-content='"+msg+"'>";
	if (retType==1){
		document.write(sTmp);
	} else {
		return sTmp;
	}
}

function mobileCheck(){

    var filter = "win16|win32|win64|mac";
    var type = 0;


    if(navigator.platform){

		if(0 > filter.indexOf(navigator.platform.toLowerCase())){
		type = 1; //모바일
		}else{
		type = 2; //PC
		}
    }
    return type;
}

function base64_encode(str){
  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {
	return String.fromCharCode('0x' + p1);
  }));
}

//쿠키 확인
function getCookie(name) {
    var nameOfCookie=name+"=";
    var a=0;
        while(a<=document.cookie.length) {
        var b=(a+nameOfCookie.length);
            if(document.cookie.substring(a,b)==nameOfCookie) {
                if((endOfCookie=document.cookie.indexOf(";",b))==-1)
                endOfCookie=document.cookie.length;
                return unescape(document.cookie.substring(b,endOfCookie));
            }
            a=document.cookie.indexOf(" ",a) +1;
            if(a==0)
            break;
        }
    return "";
}

// 쿠키 설정
function setCookie(name, value, expiredays){
    var todayDate = new Date();
    todayDate.setDate( todayDate.getDate() + expiredays );
    document.cookie = name + "=" + escape( value ) + "; path=/; expires=" + todayDate.toGMTString() + ";";
}
//카카오 알림
function sendKakaoAlrim(dest_phone,msg_body,template_code){
	$.ajaxSettings.async = false;
	var ret=0;
//	$('#loading').show();
	$.post('/kakao/API', {dest_phone:dest_phone,msg_body:msg_body,template_code:template_code} , function(result) {
		if(result['code'] != 200) {
			ret=-1;
			alert("저장에 실패하었습니다.");
		}
	}, "json").fail(function(response) {
		ret=-1;
		console.log('Error: ' + response.responseText);
	}).always(function() {
//		$('#loading').hide();
	});
	$.ajaxSettings.async = true;
	return ret;
}

function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

